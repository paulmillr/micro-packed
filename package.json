{
  "name": "micro-packed",
  "version": "0.8.0-beta.1",
  "description": "Define complex binary structures using composable primitives",
  "files": [
    "index.js",
    "index.d.ts",
    "index.js.map",
    "index.d.ts.map",
    "debugger.js",
    "debugger.d.ts",
    "debugger.js.map",
    "debugger.d.ts.map",
    "src/index.ts",
    "src/debugger.ts"
  ],
  "dependencies": {
    "@scure/base": "2.0.0-beta.1"
  },
  "devDependencies": {
    "@paulmillr/jsbt": "0.4.4",
    "fast-check": "4.2.0",
    "prettier": "3.6.2",
    "typescript": "5.9.2"
  },
  "scripts": {
    "bench": "node test/benchmark.ts noble",
    "bench:all": "node test/benchmark.ts",
    "build": "tsc",
    "build:release": "npx --no @paulmillr/jsbt esbuild test/build",
    "format": "prettier --write src test",
    "test": "node test/index.ts",
    "test:bun": "bun test/index.ts",
    "test:deno": "deno --allow-env --allow-read test/index.ts",
    "test:node20": "cd test; npx tsc; node compiled/test/index.js",
    "test:slow": "node test/slow.test.ts"
  },
  "engines": {
    "node": ">= 20.19.0"
  },
  "keywords": [
    "encode",
    "encoder",
    "binary",
    "bytes",
    "struct",
    "tuple",
    "enum"
  ],
  "funding": "https://paulmillr.com/funding/",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/paulmillr/micro-packed.git"
  },
  "type": "module",
  "main": "index.js",
  "module": "index.js",
  "types": "index.d.ts",
  "sideEffects": false,
  "author": "Paul Miller (https://paulmillr.com)",
  "license": "MIT"
}
